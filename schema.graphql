type LNNode @entity(immutable: false) {
  id: ID!
  tokenId: BigInt!
  owner: Bytes!
  buyer: Bytes!
  npub: Bytes
  lndPubkey: Bytes
  status: Int
  createdAt: BigInt!
  updatedAt: BigInt!
  events: [NodeEvent!]! @derivedFrom(field: "node")
  nodeMiningRewards: [NodeMiningReward!]! @derivedFrom(field: "node")
  channelMiningRewards: [ChannelMiningReward!]! @derivedFrom(field: "node")
}

type NodeMiningReward @entity(immutable: false) {
  id: ID!
  node: LNNode!
  rewardType: Int!
  totalAmount: BigInt!
  claimedAmount: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type ChannelMiningReward @entity(immutable: false) {
  id: ID!
  node: LNNode!
  totalAmount: BigInt!
  claimedAmount: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type NodeEvent @entity(immutable: true) {
  id: ID!
  type: String!
  timestamp: BigInt!
  node: LNNode
  nodeSale: NodeSale
  owner: String
  buyer: String
}

type NodeSale @entity(immutable: false) {
  id: ID!
  startTime: BigInt!
  title: String!
  quoteToken: Bytes!
  price: BigInt!
  amount: BigInt!
  sold: BigInt!
  enabled: Boolean!
  purchases: [Purchase!]! @derivedFrom(field: "nodeSale")
  events: [NodeEvent!]! @derivedFrom(field: "nodeSale")
}

type Purchase @entity(immutable: true) {
  id: ID!
  saleId: BigInt!
  buyer: Bytes!
  nodeSale: NodeSale!
  count: BigInt!
  inviteCode: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type NodeBinding @entity(immutable: true) {
  id: ID!
  owner: Bytes!
  npub: Bytes!
  rewardAddress: Bytes!
  buyer: Bytes!
  timestamp: BigInt!
}

# Token Entity
type AstraToken @entity(immutable: true) {
  id: ID!           # token address
  name: String!     # token name
  decimal: Int!     # token decimals
  createdAt: BigInt!
  transactionHash: String!
}

# Lightning Network Asset
type AstraAsset @entity(immutable: true) {
  id: ID!           # assetId
  name: String!     # asset name
  decimal: Int!     # asset decimals
  createdAt: BigInt!
  transactionHash: String!
}

# Hash-Locked Token Pair
type AstraPair @entity(immutable: true) {
  id: ID!           # pairId
  pairId: Bytes!    # pair ID
  token: AstraToken!     # associated token
  asset: AstraAsset!     # associated lightning asset
  createdAt: BigInt!
  transactionHash: String!
}

# Hash Time Locked Contract (HTLC) Related Entity
type AstraHTLC @entity(immutable: false) {
  id: ID!           # contractId
  sender: Bytes!    # sender address
  receiver: Bytes!  # receiver address
  nodePubkey: Bytes!   # node pubkey
  pair: AstraPair!  # associated pair
  watcher: Bytes    # settlement address
  amount: BigInt!   # locked amount
  hashlock: Bytes!  # hash lock
  timelock: BigInt! # time lock
  withdrawn: Boolean! # whether withdrawn
  refunded: Boolean!  # whether refunded
  preimage: Bytes    # preimage (if withdrawn)
  createdAt: BigInt! # creation time
  closedAt: BigInt   # closing time (withdrawn or refunded)
}
