type LNNode @entity(immutable: false) {
  id: ID!
  tokenId: BigInt!
  owner: Bytes!
  buyer: Bytes!
  npub: Bytes
  lndPubkey: Bytes
  status: Int
  createdAt: BigInt!
  updatedAt: BigInt!
  events: [NodeEvent!]! @derivedFrom(field: "node")
  nodeMiningRewards: [NodeMiningReward!]! @derivedFrom(field: "node")
  channelMiningRewards: [ChannelMiningReward!]! @derivedFrom(field: "node")
}

type NodeMiningReward @entity(immutable: false) {
  id: ID!
  node: LNNode!
  rewardType: Int!
  totalAmount: BigInt!
  claimedAmount: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type ChannelMiningReward @entity(immutable: false) {
  id: ID!
  node: LNNode!
  totalAmount: BigInt!
  claimedAmount: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type NodeEvent @entity(immutable: true) {
  id: ID!
  type: String!
  timestamp: BigInt!
  node: LNNode
  nodeSale: NodeSale
  owner: String
  buyer: String
}

type NodeSale @entity(immutable: false) {
  id: ID!
  startTime: BigInt!
  title: String!
  quoteToken: Bytes!
  price: BigInt!
  amount: BigInt!
  sold: BigInt!
  enabled: Boolean!
  purchases: [Purchase!]! @derivedFrom(field: "nodeSale")
  events: [NodeEvent!]! @derivedFrom(field: "nodeSale")
}

type Purchase @entity(immutable: true) {
  id: ID!
  saleId: BigInt!
  buyer: Bytes!
  nodeSale: NodeSale!
  count: BigInt!
  inviteCode: BigInt!
  timestamp: BigInt!
  transactionHash: String!
}

type NodeBinding @entity(immutable: true) {
  id: ID!
  owner: Bytes!
  npub: Bytes!
  rewardAddress: Bytes!
  buyer: Bytes!
  timestamp: BigInt!
}

# Token 实体
type AstraToken @entity(immutable: true) {
  id: ID!           # token 地址
  name: String!     # token 名称
  decimal: Int!     # token 精度
  createdAt: BigInt!
  transactionHash: String!
}

# 闪电网络资产
type AstraAsset @entity(immutable: true) {
  id: ID!           # assetId
  name: String!     # 资产名称
  decimal: Int!     # 资产精度
  createdAt: BigInt!
  transactionHash: String!
}

# 哈希锁币对
type AstraPair @entity(immutable: true) {
  id: ID!           # pairId
  pairId: Bytes!    # 币对ID
  token: AstraToken!     # 关联的代币
  asset: AstraAsset!     # 关联的闪电资产
  createdAt: BigInt!
  transactionHash: String!
}

# 哈希时间锁合约相关实体
type AstraHTLC @entity(immutable: false) {
  id: ID!           # contractId
  sender: Bytes!    # 发送者地址
  receiver: Bytes!  # 接收者地址
  nodePubkey: Bytes!   # 节点的pubkey
  pair: AstraPair!  # 关联的币对
  watcher: Bytes    # 结算者地址
  amount: BigInt!   # 锁定金额
  hashlock: Bytes!  # 哈希锁
  timelock: BigInt! # 时间锁
  withdrawn: Boolean! # 是否已提取
  refunded: Boolean!  # 是否已退款
  preimage: Bytes    # 原像(如果已提取)
  createdAt: BigInt! # 创建时间
  closedAt: BigInt   # 关闭时间(提取或退款)
}
